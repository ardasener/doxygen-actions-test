var annotated_dup =
[
    [ "cpptoml", "namespacecpptoml.html", [
      [ "array", "classcpptoml_1_1array.html", "classcpptoml_1_1array" ],
      [ "array_exception", "classcpptoml_1_1array__exception.html", "classcpptoml_1_1array__exception" ],
      [ "array_of_trait", "structcpptoml_1_1array__of__trait.html", "structcpptoml_1_1array__of__trait" ],
      [ "array_of_trait< array >", "structcpptoml_1_1array__of__trait_3_01array_01_4.html", "structcpptoml_1_1array__of__trait_3_01array_01_4" ],
      [ "base", "classcpptoml_1_1base.html", "classcpptoml_1_1base" ],
      [ "consumer", "classcpptoml_1_1consumer.html", "classcpptoml_1_1consumer" ],
      [ "fill_guard", "classcpptoml_1_1fill__guard.html", "classcpptoml_1_1fill__guard" ],
      [ "is_one_of", "structcpptoml_1_1is__one__of.html", null ],
      [ "is_one_of< T, V >", "structcpptoml_1_1is__one__of_3_01T_00_01V_01_4.html", null ],
      [ "is_one_of< T, V, Ts... >", "structcpptoml_1_1is__one__of_3_01T_00_01V_00_01Ts_8_8_8_01_4.html", null ],
      [ "local_date", "structcpptoml_1_1local__date.html", "structcpptoml_1_1local__date" ],
      [ "local_datetime", "structcpptoml_1_1local__datetime.html", null ],
      [ "local_time", "structcpptoml_1_1local__time.html", "structcpptoml_1_1local__time" ],
      [ "offset_datetime", "structcpptoml_1_1offset__datetime.html", null ],
      [ "option", "classcpptoml_1_1option.html", "classcpptoml_1_1option" ],
      [ "parse_exception", "classcpptoml_1_1parse__exception.html", "classcpptoml_1_1parse__exception" ],
      [ "parser", "classcpptoml_1_1parser.html", "classcpptoml_1_1parser" ],
      [ "table", "classcpptoml_1_1table.html", "classcpptoml_1_1table" ],
      [ "table_array", "classcpptoml_1_1table__array.html", "classcpptoml_1_1table__array" ],
      [ "toml_writer", "classcpptoml_1_1toml__writer.html", "classcpptoml_1_1toml__writer" ],
      [ "valid_value", "structcpptoml_1_1valid__value.html", null ],
      [ "valid_value_or_string_convertible", "structcpptoml_1_1valid__value__or__string__convertible.html", null ],
      [ "value", "classcpptoml_1_1value.html", "classcpptoml_1_1value" ],
      [ "value_accept", "structcpptoml_1_1value__accept.html", null ],
      [ "value_accept< T, Ts... >", "structcpptoml_1_1value__accept_3_01T_00_01Ts_8_8_8_01_4.html", null ],
      [ "value_accept<>", "structcpptoml_1_1value__accept_3_4.html", null ],
      [ "value_traits", "structcpptoml_1_1value__traits.html", null ],
      [ "value_traits< T, typename std::enable_if< !valid_value_or_string_convertible< T >::value &&!std::is_floating_point< typename std::decay< T >::type >::value &&std::is_signed< typename std::decay< T >::type >::value >::type >", "structcpptoml_1_1value__traits_3_01T_00_01typename_01std_1_1enable__if_3_01_9valid__value__or__s9b2e18cd3ba579a2d4644de45287dd7a.html", "structcpptoml_1_1value__traits_3_01T_00_01typename_01std_1_1enable__if_3_01_9valid__value__or__s9b2e18cd3ba579a2d4644de45287dd7a" ],
      [ "value_traits< T, typename std::enable_if< !valid_value_or_string_convertible< T >::value &&std::is_floating_point< typename std::decay< T >::type >::value >::type >", "structcpptoml_1_1value__traits_3_01T_00_01typename_01std_1_1enable__if_3_01_9valid__value__or__s1e308310cdfd07a80412c8fa63f75931.html", "structcpptoml_1_1value__traits_3_01T_00_01typename_01std_1_1enable__if_3_01_9valid__value__or__s1e308310cdfd07a80412c8fa63f75931" ],
      [ "value_traits< T, typename std::enable_if< !valid_value_or_string_convertible< T >::value &&std::is_unsigned< typename std::decay< T >::type >::value >::type >", "structcpptoml_1_1value__traits_3_01T_00_01typename_01std_1_1enable__if_3_01_9valid__value__or__s91114b098713f1123ab43d92eb8e53bc.html", "structcpptoml_1_1value__traits_3_01T_00_01typename_01std_1_1enable__if_3_01_9valid__value__or__s91114b098713f1123ab43d92eb8e53bc" ],
      [ "value_traits< T, typename std::enable_if< valid_value_or_string_convertible< T >::value >::type >", "structcpptoml_1_1value__traits_3_01T_00_01typename_01std_1_1enable__if_3_01valid__value__or__stra375cc5033de098f53c6e03c50d53fff.html", "structcpptoml_1_1value__traits_3_01T_00_01typename_01std_1_1enable__if_3_01valid__value__or__stra375cc5033de098f53c6e03c50d53fff" ],
      [ "zone_offset", "structcpptoml_1_1zone__offset.html", "structcpptoml_1_1zone__offset" ]
    ] ],
    [ "toml", "namespacetoml.html", [
      [ "internal", "namespacetoml_1_1internal.html", [
        [ "call_traits_ref", "structtoml_1_1internal_1_1call__traits__ref.html", "structtoml_1_1internal_1_1call__traits__ref" ],
        [ "call_traits_value", "structtoml_1_1internal_1_1call__traits__value.html", "structtoml_1_1internal_1_1call__traits__value" ],
        [ "Lexer", "classtoml_1_1internal_1_1Lexer.html", "classtoml_1_1internal_1_1Lexer" ],
        [ "Parser", "classtoml_1_1internal_1_1Parser.html", "classtoml_1_1internal_1_1Parser" ],
        [ "Token", "classtoml_1_1internal_1_1Token.html", "classtoml_1_1internal_1_1Token" ]
      ] ],
      [ "call_traits", "structtoml_1_1call__traits.html", null ],
      [ "call_traits< Array >", "structtoml_1_1call__traits_3_01Array_01_4.html", null ],
      [ "call_traits< bool >", "structtoml_1_1call__traits_3_01bool_01_4.html", null ],
      [ "call_traits< double >", "structtoml_1_1call__traits_3_01double_01_4.html", null ],
      [ "call_traits< int >", "structtoml_1_1call__traits_3_01int_01_4.html", null ],
      [ "call_traits< int64_t >", "structtoml_1_1call__traits_3_01int64__t_01_4.html", null ],
      [ "call_traits< std::string >", "structtoml_1_1call__traits_3_01std_1_1string_01_4.html", null ],
      [ "call_traits< std::vector< T > >", "structtoml_1_1call__traits_3_01std_1_1vector_3_01T_01_4_01_4.html", null ],
      [ "call_traits< Table >", "structtoml_1_1call__traits_3_01Table_01_4.html", null ],
      [ "call_traits< Time >", "structtoml_1_1call__traits_3_01Time_01_4.html", null ],
      [ "ParseResult", "structtoml_1_1ParseResult.html", "structtoml_1_1ParseResult" ],
      [ "Value", "classtoml_1_1Value.html", "classtoml_1_1Value" ]
    ] ],
    [ "Algorithm", "classAlgorithm.html", "classAlgorithm" ],
    [ "Classroom", "classClassroom.html", "classClassroom" ],
    [ "Concurrent", "classConcurrent.html", "classConcurrent" ],
    [ "Config", "classConfig.html", "classConfig" ],
    [ "Course", "classCourse.html", "classCourse" ],
    [ "CourseTime", "classCourseTime.html", "classCourseTime" ],
    [ "Schedule", "classSchedule.html", "classSchedule" ],
    [ "TimeSlot", "classTimeSlot.html", "classTimeSlot" ]
];